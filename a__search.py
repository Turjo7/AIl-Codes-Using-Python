# -*- coding: utf-8 -*-
"""A*_Sarch_011152200.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dz9jqxM45eB7OPYIU9v4_76_BxshD3r6
"""

pip install prioQbyrobi

import prioQbyrobi as PQ

dict1 = { 0:'S', 1:'A', 2:'B', 3:'C', 4:'D'}
#print(dict1)
list_adj = [[-1,1,4,-1,-1],
            [-1,-1,2,5,12],
            [-1,-1,-1,2,-1],
            [-1,-1,-1,-1,3],
            [-1,-1,-1,-1,-1]]
#print(list_adj)
h_value = [7,6,2,1,0]
#print(h_value)

class Node:
  def __init__(self, act_cost_so_far, total_cost, node_no, node_obj=None):
    self.actual_cost_sofar = act_cost_so_far
    self.total_cost = total_cost
    self.node_no = node_no
    self.prev_node_obj = node_obj

source_node = Node(0,7,'S')

minPQ = PQ.PriorityQueue()

minPQ.insert(source_node)
t = 0  # for tracking
keepTrack1 = 0 
while minPQ.size():
  getNodeObj = minPQ.delete()
  nodeName = getNodeObj.node_no

  for x in dict1:
    if dict1[x] == nodeName :
      keepTrack = t
      keepTrack1 = keepTrack
      break
    else:
      t += 1
  t = 0
  if keepTrack1 == (len(dict1)-1):
    #print(f"end {getNodeObj.total_cost}")
    break
  i = 0
  #print(f"Parent: {getNodeObj.node_no}")
  for adjNode in list_adj[keepTrack1]:
    if adjNode != -1: 
      gn = getNodeObj.actual_cost_sofar + adjNode
      fn = gn + h_value[i]
      #print(f"Child node:{dict1[i]} - cost:{fn} - actual_cost:{gn} and previous cost:{getNodeObj.actual_cost_sofar}")
      nodeNew = Node(gn,fn,dict1[i],getNodeObj)
      minPQ.insert(nodeNew)
    i += 1

nodePath = []
print(f'Total cost: {getNodeObj.total_cost}')
while 1:
  getPrevNodeObj = getNodeObj.prev_node_obj
  if(getPrevNodeObj != None):
    nodePath.append(getNodeObj.node_no)
    getNodeObj = getPrevNodeObj
  else:
    nodePath.append(getNodeObj.node_no)
    break

nodePath.reverse()
print(f'Path: {nodePath}')